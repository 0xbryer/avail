[package]
name = "frame-system"
version = "4.0.0-dev"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2021"
license = "Apache-2.0"
homepage = "https://substrate.io"
repository = "https://github.com/availproject/polkadot-sdk/"
description = "FRAME system module"
readme = "README.md"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
avail-base = { path = "../../base", default-features = false }
avail-core = { workspace = true, default-features = false }
kate = { workspace = true, default-features = false }

# Other
cfg-if = "1.0"
impl-trait-for-tuples = "0.2.1"
static_assertions = "1.1.0"
log = { version = "0.4.20", default-features = false }
rs_merkle = { version = "1.2.0", default-features = false, optional = true }
derive_more = { version = "0.99.17", default-features = false, features = ["from", "into"] }
once_cell = { version = "1.18", optional = true }
libm = { version = "0.2.1", default-features = false }
ethabi = { version = "18.0.0", default-features = false }

# Substrate
codec = { package = "parity-scale-codec", version = "3.6.1", default-features = false, features = ["derive"] }
scale-info = { version = "2.5.0", default-features = false, features = ["derive", "serde"] }
serde = { version = "1.0.195", default-features = false, features = ["derive", "alloc"], optional = true }
frame-support = { workspace = true, default-features = false }
sp-core = { workspace = true, default-features = false, features = ["serde"] }
sp-io = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false, features = ["serde"] }
sp-std = { workspace = true, default-features = false }
sp-version = { workspace = true, default-features = false, features = ["serde"] }
sp-weights = { workspace = true, default-features = false, features = ["serde"] }
sp-runtime-interface = { workspace = true, default-features = false }
binary-merkle-tree = { workspace = true, default-features = false }
bounded-collections = { version = "0.2.0", default-features = false }

[dev-dependencies]
hex-literal = "0.3.1"
test-case = "1.2.3"
criterion = "0.5.1"
sp-externalities = { workspace = true, default-features = false }

[features]
default = [ "std" ]
std = [
	"avail-base/std",
	"avail-core/std",
	"binary-merkle-tree/std",
	"bounded-collections/std",
	"codec/std",
	"frame-support/std",
	"kate/std",
	"log/std",
	"once_cell",
	"scale-info/std",
	"serde/std",
	"sp-core/std",
	"sp-externalities/std",
	"sp-io/std",
	"sp-runtime-interface/std",
	"sp-runtime/std",
	"sp-std/std",
	"sp-version/std",
	"sp-weights/std",
]
runtime-benchmarks = [
	"frame-support/runtime-benchmarks",
	"serde",
	"sp-runtime/runtime-benchmarks",
]
try-runtime = [
	"avail-core/try-runtime",
	"frame-support/try-runtime",
	"sp-runtime/try-runtime",
]
serde = [ "dep:serde" ]

# It enables the corruption of header extensions where block number is greater than 20.
# NOTE: Only for testing and development purposes.
header_commitment_corruption = []

# Enables secure seed generation using for padding fill during the matrix 
# generation for Kate commitment.
# NOTE: WIP because that affects the Data Availability Protocol used during 
# the block import process.
secure_padding_fill = []

[[bench]]
name = "bench"
harness = false
