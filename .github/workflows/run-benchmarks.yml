name: Run benchmarks

on:
  workflow_dispatch:
    inputs:
      extra:
        description: Run extra benchmark (commitment / dataroot)
        required: false
        default: 0
      ourpallets:
        description: Benchmark only our pallet
        required: false
        default: 0

jobs:
  benchmark:
    runs-on: [self-hosted, reference]
    steps:
      - uses: actions/checkout@v2

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential valgrind git clang curl libssl-dev protobuf-compiler unzip

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: "3.x"

      - name: Setup Rust toolchain
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source "$HOME/.cargo/env"
          rustup target add wasm32-unknown-unknown
          rustup show
      
      - name: Set PATH for cargo
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

#      - name: Build node and run benchmarks
#        run: |
#          if [ "${{ github.event.inputs.extra }}" != "0" ]; then
#            EXTRA="EXTRA=${{ github.event.inputs.extra }}"
#          else
#            EXTRA=""
#          fi

#          if [ "${{ github.event.inputs.ourpallets }}" != "0" ]; then
#            OUR_PALLETS="OUR_PALLETS=${{ github.event.inputs.ourpallets }}"
#          else
#            OUR_PALLETS=""
#          fi

#          echo "Command to be executed: $EXTRA $OUR_PALLETS ./scripts/run_benchmarks.sh"

#          $EXTRA $OUR_PALLETS ./scripts/run_benchmarks.sh

      # Run benchmarks & run action benchmark
      - name: Run Header Generation Benchmark
        run: cargo bench -p da-runtime | tee header_gen_bench.txt
      - name: Download previous Header Generation Benchmark 
        uses: actions/cache@v1
        with:
          path: ./cache
          key: ${{ runner.os }}-header-gen-benchmark
      - name: Store Header Generation Benchmark 
        uses: fmiguelgarcia/github-action-benchmark@v1
        with:
          # What benchmark tool the output.txt came from
          tool: 'rustIai'
          # Where the output from the benchmark tool is stored
          output-file-path: header_gen_bench.txt
          # Where the previous data file is stored
          external-data-json-path: ./cache/benchmark-data.json
          # Workflow will fail when an alert happens at 15% degradation
          fail-on-alert: true
          alert-threshold: '15%'
          # Upload the updated cache file for the next job by actions/cache
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Enable alert commit comment
          comment-on-alert: true
          # Mention @rhysd in the commit comment
          alert-comment-cc-users: '@fmiguelgarcia,@prabal-banerjee,@jakubcech,@vthunder,@kroos47,@Leouarz'


      - name: Upload output as artifact
        uses: actions/upload-artifact@v2
        with:
          name: weights-result
          path: ./output/
