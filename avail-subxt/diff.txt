diff --git a/avail-subxt/src/api_dev.rs b/avail-subxt/src/api_dev.rs
index 8557714a..16441d91 100644
--- a/avail-subxt/src/api_dev.rs
+++ b/avail-subxt/src/api_dev.rs
@@ -1206,9 +1206,9 @@ pub mod api {
 					calls: ::std::vec::Vec<runtime_types::da_runtime::RuntimeCall>,
 				) -> ::subxt::tx::StaticTxPayload<Batch> {
 					::subxt::tx::StaticTxPayload::new("Utility", "batch", Batch { calls }, [
-						184u8, 36u8, 19u8, 183u8, 193u8, 98u8, 156u8, 152u8, 221u8, 2u8, 237u8,
-						136u8, 253u8, 122u8, 208u8, 114u8, 166u8, 133u8, 84u8, 136u8, 141u8, 250u8,
-						235u8, 2u8, 244u8, 206u8, 16u8, 60u8, 95u8, 206u8, 181u8, 1u8,
+						232u8, 167u8, 195u8, 141u8, 175u8, 21u8, 126u8, 168u8, 115u8, 28u8, 243u8,
+						109u8, 75u8, 140u8, 18u8, 128u8, 97u8, 234u8, 4u8, 215u8, 49u8, 31u8,
+						255u8, 242u8, 10u8, 63u8, 20u8, 193u8, 44u8, 136u8, 165u8, 189u8,
 					])
 				}
 
@@ -1238,10 +1238,10 @@ pub mod api {
 							call: ::std::boxed::Box::new(call),
 						},
 						[
-							112u8, 222u8, 226u8, 32u8, 90u8, 121u8, 125u8, 245u8, 25u8, 154u8,
-							111u8, 27u8, 46u8, 211u8, 88u8, 23u8, 211u8, 25u8, 107u8, 177u8, 209u8,
-							204u8, 216u8, 189u8, 62u8, 198u8, 158u8, 35u8, 211u8, 130u8, 21u8,
-							60u8,
+							59u8, 48u8, 241u8, 205u8, 106u8, 182u8, 128u8, 100u8, 226u8, 247u8,
+							65u8, 187u8, 228u8, 41u8, 33u8, 222u8, 63u8, 176u8, 97u8, 27u8, 33u8,
+							203u8, 161u8, 221u8, 229u8, 49u8, 42u8, 29u8, 147u8, 235u8, 192u8,
+							251u8,
 						],
 					)
 				}
@@ -1265,9 +1265,9 @@ pub mod api {
 					calls: ::std::vec::Vec<runtime_types::da_runtime::RuntimeCall>,
 				) -> ::subxt::tx::StaticTxPayload<BatchAll> {
 					::subxt::tx::StaticTxPayload::new("Utility", "batch_all", BatchAll { calls }, [
-						165u8, 43u8, 221u8, 89u8, 110u8, 25u8, 67u8, 87u8, 205u8, 201u8, 64u8,
-						224u8, 204u8, 115u8, 196u8, 169u8, 1u8, 51u8, 106u8, 157u8, 63u8, 51u8,
-						166u8, 41u8, 179u8, 76u8, 219u8, 174u8, 134u8, 221u8, 208u8, 103u8,
+						154u8, 107u8, 132u8, 114u8, 33u8, 26u8, 30u8, 66u8, 94u8, 94u8, 45u8,
+						123u8, 23u8, 71u8, 238u8, 19u8, 146u8, 41u8, 143u8, 68u8, 107u8, 230u8,
+						92u8, 41u8, 1u8, 104u8, 92u8, 86u8, 249u8, 194u8, 71u8, 16u8,
 					])
 				}
 
@@ -1294,9 +1294,9 @@ pub mod api {
 							call: ::std::boxed::Box::new(call),
 						},
 						[
-							234u8, 80u8, 71u8, 232u8, 62u8, 199u8, 197u8, 119u8, 109u8, 75u8,
-							240u8, 50u8, 96u8, 143u8, 93u8, 35u8, 17u8, 153u8, 236u8, 170u8, 34u8,
-							202u8, 48u8, 232u8, 217u8, 100u8, 47u8, 102u8, 89u8, 203u8, 47u8, 67u8,
+							74u8, 240u8, 128u8, 219u8, 85u8, 138u8, 212u8, 27u8, 92u8, 86u8, 114u8,
+							91u8, 44u8, 70u8, 41u8, 143u8, 3u8, 237u8, 99u8, 207u8, 242u8, 133u8,
+							105u8, 55u8, 252u8, 41u8, 111u8, 235u8, 168u8, 8u8, 54u8, 93u8,
 						],
 					)
 				}
@@ -1324,9 +1324,10 @@ pub mod api {
 						"force_batch",
 						ForceBatch { calls },
 						[
-							181u8, 43u8, 92u8, 17u8, 226u8, 144u8, 29u8, 8u8, 54u8, 50u8, 31u8,
-							57u8, 37u8, 254u8, 113u8, 149u8, 42u8, 11u8, 35u8, 57u8, 62u8, 70u8,
-							236u8, 222u8, 190u8, 188u8, 94u8, 2u8, 209u8, 86u8, 30u8, 59u8,
+							226u8, 163u8, 100u8, 158u8, 151u8, 112u8, 24u8, 29u8, 110u8, 248u8,
+							164u8, 93u8, 36u8, 177u8, 100u8, 240u8, 255u8, 16u8, 201u8, 24u8, 53u8,
+							153u8, 197u8, 255u8, 56u8, 112u8, 161u8, 194u8, 216u8, 143u8, 218u8,
+							97u8,
 						],
 					)
 				}
@@ -1350,9 +1351,10 @@ pub mod api {
 							weight,
 						},
 						[
-							8u8, 118u8, 209u8, 0u8, 94u8, 163u8, 91u8, 108u8, 106u8, 81u8, 71u8,
-							9u8, 27u8, 223u8, 91u8, 45u8, 146u8, 165u8, 177u8, 247u8, 134u8, 35u8,
-							34u8, 67u8, 75u8, 118u8, 88u8, 251u8, 217u8, 176u8, 85u8, 130u8,
+							252u8, 255u8, 23u8, 178u8, 210u8, 177u8, 230u8, 10u8, 83u8, 3u8, 101u8,
+							190u8, 245u8, 87u8, 228u8, 212u8, 34u8, 51u8, 116u8, 139u8, 18u8,
+							143u8, 240u8, 237u8, 31u8, 148u8, 164u8, 194u8, 222u8, 75u8, 171u8,
+							65u8,
 						],
 					)
 				}
@@ -1561,9 +1563,9 @@ pub mod api {
 							key_owner_proof,
 						},
 						[
-							83u8, 29u8, 91u8, 18u8, 161u8, 50u8, 202u8, 65u8, 17u8, 151u8, 25u8,
-							255u8, 78u8, 245u8, 144u8, 169u8, 113u8, 67u8, 9u8, 83u8, 20u8, 7u8,
-							205u8, 244u8, 63u8, 67u8, 103u8, 33u8, 204u8, 128u8, 198u8, 99u8,
+							123u8, 174u8, 188u8, 66u8, 226u8, 81u8, 70u8, 19u8, 181u8, 37u8, 54u8,
+							233u8, 6u8, 52u8, 189u8, 206u8, 222u8, 48u8, 214u8, 61u8, 100u8, 200u8,
+							121u8, 184u8, 157u8, 204u8, 19u8, 95u8, 138u8, 61u8, 141u8, 30u8,
 						],
 					)
 				}
@@ -1595,10 +1597,9 @@ pub mod api {
 							key_owner_proof,
 						},
 						[
-							5u8, 78u8, 86u8, 186u8, 250u8, 62u8, 207u8, 60u8, 251u8, 253u8, 231u8,
-							14u8, 185u8, 55u8, 220u8, 75u8, 247u8, 205u8, 237u8, 134u8, 176u8,
-							121u8, 166u8, 247u8, 238u8, 43u8, 71u8, 122u8, 66u8, 159u8, 239u8,
-							53u8,
+							29u8, 24u8, 94u8, 11u8, 226u8, 234u8, 59u8, 154u8, 68u8, 130u8, 231u8,
+							71u8, 20u8, 219u8, 1u8, 105u8, 244u8, 211u8, 139u8, 134u8, 233u8,
+							219u8, 16u8, 158u8, 198u8, 55u8, 1u8, 196u8, 35u8, 82u8, 199u8, 89u8,
 						],
 					)
 				}
@@ -2272,9 +2273,9 @@ pub mod api {
 						"set_uncles",
 						SetUncles { new_uncles },
 						[
-							37u8, 197u8, 135u8, 53u8, 63u8, 119u8, 31u8, 241u8, 155u8, 123u8, 40u8,
-							160u8, 221u8, 104u8, 45u8, 93u8, 96u8, 96u8, 137u8, 194u8, 218u8, 51u8,
-							207u8, 141u8, 204u8, 211u8, 116u8, 95u8, 144u8, 118u8, 33u8, 220u8,
+							125u8, 247u8, 185u8, 237u8, 44u8, 102u8, 10u8, 182u8, 204u8, 104u8,
+							74u8, 83u8, 167u8, 54u8, 12u8, 23u8, 237u8, 183u8, 237u8, 152u8, 45u8,
+							4u8, 103u8, 87u8, 142u8, 4u8, 96u8, 208u8, 111u8, 21u8, 51u8, 127u8,
 						],
 					)
 				}
@@ -9797,10 +9798,10 @@ pub mod api {
 							length_bound,
 						},
 						[
-							107u8, 21u8, 245u8, 238u8, 132u8, 72u8, 227u8, 203u8, 39u8, 237u8,
-							131u8, 121u8, 28u8, 94u8, 206u8, 83u8, 10u8, 131u8, 58u8, 105u8, 108u8,
-							168u8, 209u8, 9u8, 125u8, 120u8, 243u8, 185u8, 167u8, 23u8, 37u8,
-							177u8,
+							45u8, 214u8, 69u8, 97u8, 196u8, 168u8, 185u8, 191u8, 124u8, 248u8,
+							72u8, 220u8, 90u8, 236u8, 42u8, 241u8, 136u8, 134u8, 24u8, 42u8, 28u8,
+							171u8, 164u8, 50u8, 117u8, 142u8, 11u8, 66u8, 15u8, 197u8, 194u8,
+							172u8,
 						],
 					)
 				}
@@ -9847,10 +9848,9 @@ pub mod api {
 							length_bound,
 						},
 						[
-							132u8, 171u8, 254u8, 170u8, 31u8, 101u8, 144u8, 111u8, 139u8, 13u8,
-							150u8, 43u8, 142u8, 80u8, 63u8, 209u8, 191u8, 151u8, 78u8, 137u8, 5u8,
-							187u8, 28u8, 139u8, 127u8, 133u8, 224u8, 168u8, 112u8, 186u8, 227u8,
-							53u8,
+							73u8, 13u8, 46u8, 151u8, 147u8, 233u8, 39u8, 8u8, 130u8, 216u8, 123u8,
+							220u8, 86u8, 17u8, 143u8, 80u8, 118u8, 218u8, 92u8, 21u8, 234u8, 137u8,
+							160u8, 51u8, 244u8, 100u8, 213u8, 176u8, 112u8, 100u8, 157u8, 150u8,
 						],
 					)
 				}
@@ -10213,9 +10213,10 @@ pub mod api {
 							::subxt::storage::address::StorageHasher::Identity,
 						)],
 						[
-							162u8, 9u8, 234u8, 5u8, 146u8, 108u8, 153u8, 10u8, 7u8, 55u8, 60u8,
-							97u8, 62u8, 235u8, 39u8, 37u8, 2u8, 168u8, 48u8, 71u8, 221u8, 224u8,
-							243u8, 192u8, 147u8, 57u8, 219u8, 157u8, 35u8, 78u8, 119u8, 39u8,
+							40u8, 250u8, 107u8, 163u8, 46u8, 138u8, 155u8, 2u8, 134u8, 158u8,
+							146u8, 76u8, 146u8, 199u8, 177u8, 106u8, 68u8, 119u8, 54u8, 11u8,
+							214u8, 26u8, 174u8, 165u8, 33u8, 242u8, 122u8, 159u8, 60u8, 9u8, 61u8,
+							154u8,
 						],
 					)
 				}
@@ -10234,9 +10235,10 @@ pub mod api {
 						"ProposalOf",
 						Vec::new(),
 						[
-							162u8, 9u8, 234u8, 5u8, 146u8, 108u8, 153u8, 10u8, 7u8, 55u8, 60u8,
-							97u8, 62u8, 235u8, 39u8, 37u8, 2u8, 168u8, 48u8, 71u8, 221u8, 224u8,
-							243u8, 192u8, 147u8, 57u8, 219u8, 157u8, 35u8, 78u8, 119u8, 39u8,
+							40u8, 250u8, 107u8, 163u8, 46u8, 138u8, 155u8, 2u8, 134u8, 158u8,
+							146u8, 76u8, 146u8, 199u8, 177u8, 106u8, 68u8, 119u8, 54u8, 11u8,
+							214u8, 26u8, 174u8, 165u8, 33u8, 242u8, 122u8, 159u8, 60u8, 9u8, 61u8,
+							154u8,
 						],
 					)
 				}
@@ -10555,10 +10557,10 @@ pub mod api {
 							length_bound,
 						},
 						[
-							107u8, 21u8, 245u8, 238u8, 132u8, 72u8, 227u8, 203u8, 39u8, 237u8,
-							131u8, 121u8, 28u8, 94u8, 206u8, 83u8, 10u8, 131u8, 58u8, 105u8, 108u8,
-							168u8, 209u8, 9u8, 125u8, 120u8, 243u8, 185u8, 167u8, 23u8, 37u8,
-							177u8,
+							45u8, 214u8, 69u8, 97u8, 196u8, 168u8, 185u8, 191u8, 124u8, 248u8,
+							72u8, 220u8, 90u8, 236u8, 42u8, 241u8, 136u8, 134u8, 24u8, 42u8, 28u8,
+							171u8, 164u8, 50u8, 117u8, 142u8, 11u8, 66u8, 15u8, 197u8, 194u8,
+							172u8,
 						],
 					)
 				}
@@ -10605,10 +10607,9 @@ pub mod api {
 							length_bound,
 						},
 						[
-							132u8, 171u8, 254u8, 170u8, 31u8, 101u8, 144u8, 111u8, 139u8, 13u8,
-							150u8, 43u8, 142u8, 80u8, 63u8, 209u8, 191u8, 151u8, 78u8, 137u8, 5u8,
-							187u8, 28u8, 139u8, 127u8, 133u8, 224u8, 168u8, 112u8, 186u8, 227u8,
-							53u8,
+							73u8, 13u8, 46u8, 151u8, 147u8, 233u8, 39u8, 8u8, 130u8, 216u8, 123u8,
+							220u8, 86u8, 17u8, 143u8, 80u8, 118u8, 218u8, 92u8, 21u8, 234u8, 137u8,
+							160u8, 51u8, 244u8, 100u8, 213u8, 176u8, 112u8, 100u8, 157u8, 150u8,
 						],
 					)
 				}
@@ -10971,9 +10972,10 @@ pub mod api {
 							::subxt::storage::address::StorageHasher::Identity,
 						)],
 						[
-							162u8, 9u8, 234u8, 5u8, 146u8, 108u8, 153u8, 10u8, 7u8, 55u8, 60u8,
-							97u8, 62u8, 235u8, 39u8, 37u8, 2u8, 168u8, 48u8, 71u8, 221u8, 224u8,
-							243u8, 192u8, 147u8, 57u8, 219u8, 157u8, 35u8, 78u8, 119u8, 39u8,
+							40u8, 250u8, 107u8, 163u8, 46u8, 138u8, 155u8, 2u8, 134u8, 158u8,
+							146u8, 76u8, 146u8, 199u8, 177u8, 106u8, 68u8, 119u8, 54u8, 11u8,
+							214u8, 26u8, 174u8, 165u8, 33u8, 242u8, 122u8, 159u8, 60u8, 9u8, 61u8,
+							154u8,
 						],
 					)
 				}
@@ -10992,9 +10994,10 @@ pub mod api {
 						"ProposalOf",
 						Vec::new(),
 						[
-							162u8, 9u8, 234u8, 5u8, 146u8, 108u8, 153u8, 10u8, 7u8, 55u8, 60u8,
-							97u8, 62u8, 235u8, 39u8, 37u8, 2u8, 168u8, 48u8, 71u8, 221u8, 224u8,
-							243u8, 192u8, 147u8, 57u8, 219u8, 157u8, 35u8, 78u8, 119u8, 39u8,
+							40u8, 250u8, 107u8, 163u8, 46u8, 138u8, 155u8, 2u8, 134u8, 158u8,
+							146u8, 76u8, 146u8, 199u8, 177u8, 106u8, 68u8, 119u8, 54u8, 11u8,
+							214u8, 26u8, 174u8, 165u8, 33u8, 242u8, 122u8, 159u8, 60u8, 9u8, 61u8,
+							154u8,
 						],
 					)
 				}
@@ -13351,9 +13354,10 @@ pub mod api {
 							call: ::std::boxed::Box::new(call),
 						},
 						[
-							127u8, 84u8, 46u8, 210u8, 218u8, 57u8, 84u8, 156u8, 188u8, 154u8,
-							132u8, 229u8, 88u8, 99u8, 40u8, 52u8, 118u8, 193u8, 206u8, 178u8, 43u8,
-							20u8, 99u8, 182u8, 180u8, 160u8, 220u8, 183u8, 50u8, 80u8, 97u8, 47u8,
+							123u8, 64u8, 233u8, 209u8, 249u8, 128u8, 180u8, 25u8, 254u8, 40u8,
+							191u8, 181u8, 165u8, 24u8, 142u8, 227u8, 101u8, 231u8, 143u8, 70u8,
+							161u8, 62u8, 54u8, 14u8, 173u8, 4u8, 66u8, 188u8, 4u8, 143u8, 132u8,
+							155u8,
 						],
 					)
 				}
@@ -13381,10 +13385,9 @@ pub mod api {
 							weight,
 						},
 						[
-							43u8, 181u8, 131u8, 128u8, 150u8, 45u8, 141u8, 240u8, 64u8, 56u8,
-							243u8, 55u8, 48u8, 140u8, 173u8, 130u8, 88u8, 239u8, 26u8, 11u8, 177u8,
-							191u8, 56u8, 176u8, 115u8, 236u8, 191u8, 11u8, 169u8, 64u8, 82u8,
-							207u8,
+							1u8, 155u8, 177u8, 75u8, 222u8, 67u8, 216u8, 16u8, 201u8, 247u8, 197u8,
+							151u8, 8u8, 198u8, 8u8, 217u8, 127u8, 134u8, 191u8, 125u8, 142u8, 78u8,
+							186u8, 60u8, 7u8, 91u8, 118u8, 10u8, 107u8, 89u8, 193u8, 36u8,
 						],
 					)
 				}
@@ -13440,9 +13443,10 @@ pub mod api {
 							call: ::std::boxed::Box::new(call),
 						},
 						[
-							116u8, 66u8, 7u8, 118u8, 235u8, 36u8, 251u8, 252u8, 33u8, 205u8, 103u8,
-							152u8, 121u8, 252u8, 79u8, 23u8, 40u8, 209u8, 167u8, 174u8, 36u8, 33u8,
-							81u8, 72u8, 9u8, 76u8, 201u8, 100u8, 1u8, 240u8, 160u8, 57u8,
+							197u8, 69u8, 33u8, 104u8, 2u8, 176u8, 208u8, 39u8, 73u8, 27u8, 105u8,
+							77u8, 74u8, 121u8, 134u8, 141u8, 117u8, 249u8, 241u8, 180u8, 251u8,
+							26u8, 146u8, 18u8, 223u8, 162u8, 172u8, 166u8, 50u8, 243u8, 185u8,
+							189u8,
 						],
 					)
 				}
@@ -14314,10 +14318,10 @@ pub mod api {
 							call: ::std::boxed::Box::new(call),
 						},
 						[
-							143u8, 131u8, 121u8, 168u8, 215u8, 154u8, 13u8, 105u8, 169u8, 114u8,
-							227u8, 234u8, 13u8, 220u8, 70u8, 111u8, 45u8, 74u8, 139u8, 34u8, 245u8,
-							40u8, 121u8, 58u8, 77u8, 179u8, 16u8, 111u8, 248u8, 204u8, 211u8,
-							166u8,
+							37u8, 171u8, 218u8, 167u8, 114u8, 215u8, 63u8, 119u8, 119u8, 198u8,
+							111u8, 109u8, 129u8, 3u8, 66u8, 203u8, 210u8, 190u8, 19u8, 43u8, 65u8,
+							197u8, 110u8, 201u8, 165u8, 192u8, 60u8, 102u8, 230u8, 216u8, 40u8,
+							178u8,
 						],
 					)
 				}
@@ -14363,10 +14367,10 @@ pub mod api {
 							call: ::std::boxed::Box::new(call),
 						},
 						[
-							242u8, 61u8, 104u8, 10u8, 155u8, 16u8, 184u8, 204u8, 102u8, 249u8,
-							158u8, 199u8, 94u8, 150u8, 54u8, 63u8, 111u8, 118u8, 231u8, 210u8,
-							137u8, 176u8, 119u8, 117u8, 130u8, 78u8, 202u8, 253u8, 174u8, 248u8,
-							87u8, 185u8,
+							67u8, 194u8, 123u8, 142u8, 113u8, 75u8, 9u8, 1u8, 58u8, 83u8, 149u8,
+							44u8, 35u8, 249u8, 163u8, 82u8, 252u8, 46u8, 106u8, 117u8, 168u8,
+							112u8, 29u8, 149u8, 217u8, 194u8, 225u8, 87u8, 147u8, 175u8, 31u8,
+							133u8,
 						],
 					)
 				}
@@ -14413,10 +14417,9 @@ pub mod api {
 							call: ::std::boxed::Box::new(call),
 						},
 						[
-							142u8, 233u8, 193u8, 252u8, 40u8, 115u8, 197u8, 228u8, 119u8, 103u8,
-							82u8, 46u8, 111u8, 108u8, 59u8, 219u8, 100u8, 141u8, 134u8, 21u8,
-							220u8, 22u8, 143u8, 131u8, 80u8, 93u8, 250u8, 109u8, 19u8, 166u8, 34u8,
-							56u8,
+							188u8, 139u8, 145u8, 27u8, 241u8, 59u8, 69u8, 97u8, 37u8, 36u8, 208u8,
+							121u8, 135u8, 8u8, 175u8, 81u8, 125u8, 240u8, 36u8, 100u8, 43u8, 5u8,
+							110u8, 30u8, 130u8, 131u8, 113u8, 184u8, 64u8, 135u8, 95u8, 153u8,
 						],
 					)
 				}
@@ -14448,9 +14451,10 @@ pub mod api {
 							call: ::std::boxed::Box::new(call),
 						},
 						[
-							114u8, 223u8, 214u8, 229u8, 56u8, 142u8, 239u8, 21u8, 1u8, 90u8, 89u8,
-							187u8, 171u8, 136u8, 134u8, 134u8, 150u8, 159u8, 62u8, 185u8, 239u8,
-							182u8, 189u8, 2u8, 119u8, 3u8, 152u8, 192u8, 178u8, 58u8, 47u8, 109u8,
+							14u8, 75u8, 142u8, 141u8, 253u8, 79u8, 203u8, 113u8, 222u8, 110u8,
+							176u8, 252u8, 173u8, 217u8, 249u8, 32u8, 236u8, 4u8, 194u8, 127u8,
+							64u8, 28u8, 102u8, 203u8, 237u8, 98u8, 172u8, 63u8, 98u8, 73u8, 236u8,
+							45u8,
 						],
 					)
 				}
@@ -17223,10 +17227,10 @@ pub mod api {
 							header: ::std::boxed::Box::new(header),
 						},
 						[
-							190u8, 51u8, 167u8, 216u8, 67u8, 207u8, 45u8, 202u8, 198u8, 90u8,
-							165u8, 128u8, 60u8, 206u8, 218u8, 51u8, 148u8, 10u8, 230u8, 102u8,
-							168u8, 91u8, 178u8, 242u8, 66u8, 246u8, 214u8, 92u8, 91u8, 152u8,
-							210u8, 67u8,
+							19u8, 123u8, 238u8, 197u8, 226u8, 94u8, 3u8, 89u8, 162u8, 66u8, 142u8,
+							50u8, 192u8, 196u8, 195u8, 250u8, 109u8, 80u8, 140u8, 22u8, 28u8,
+							170u8, 174u8, 245u8, 135u8, 171u8, 45u8, 156u8, 63u8, 192u8, 115u8,
+							176u8,
 						],
 					)
 				}
@@ -17676,10 +17680,10 @@ pub mod api {
 							call: ::std::boxed::Box::new(call),
 						},
 						[
-							145u8, 138u8, 220u8, 23u8, 56u8, 52u8, 192u8, 218u8, 163u8, 101u8,
-							31u8, 54u8, 237u8, 219u8, 11u8, 84u8, 75u8, 77u8, 87u8, 190u8, 186u8,
-							121u8, 200u8, 216u8, 195u8, 154u8, 208u8, 154u8, 91u8, 8u8, 217u8,
-							181u8,
+							142u8, 128u8, 95u8, 234u8, 201u8, 238u8, 194u8, 107u8, 33u8, 138u8,
+							188u8, 64u8, 164u8, 116u8, 86u8, 9u8, 209u8, 242u8, 254u8, 57u8, 24u8,
+							204u8, 74u8, 37u8, 227u8, 215u8, 179u8, 130u8, 196u8, 111u8, 240u8,
+							180u8,
 						],
 					)
 				}
@@ -17750,9 +17754,9 @@ pub mod api {
 							max_weight,
 						},
 						[
-							54u8, 95u8, 170u8, 210u8, 104u8, 119u8, 189u8, 188u8, 66u8, 8u8, 195u8,
-							75u8, 5u8, 184u8, 137u8, 25u8, 144u8, 140u8, 111u8, 169u8, 16u8, 103u8,
-							173u8, 98u8, 37u8, 73u8, 248u8, 15u8, 147u8, 133u8, 119u8, 255u8,
+							17u8, 231u8, 202u8, 194u8, 254u8, 127u8, 28u8, 44u8, 236u8, 95u8, 18u8,
+							56u8, 60u8, 190u8, 255u8, 94u8, 25u8, 181u8, 127u8, 66u8, 68u8, 114u8,
+							171u8, 78u8, 162u8, 71u8, 223u8, 106u8, 180u8, 14u8, 52u8, 205u8,
 						],
 					)
 				}
@@ -20173,10 +20177,10 @@ pub mod api {
 							serde :: Serialize,
 						)]
 						pub struct HeaderExtension {
-							pub commitment:
-								runtime_types::da_primitives::kate_commitment::v2::KateCommitment,
 							pub app_lookup:
 								runtime_types::da_primitives::asdr::data_lookup::DataLookup,
+							pub commitment:
+								runtime_types::da_primitives::kate_commitment::v2::KateCommitment,
 						}
 					}
 					#[derive(
@@ -20259,8 +20263,8 @@ pub mod api {
 						pub rows: ::core::primitive::u16,
 						#[codec(compact)]
 						pub cols: ::core::primitive::u16,
-						pub data_root: ::core::option::Option<::subxt::utils::H256>,
 						pub commitment: ::std::vec::Vec<::core::primitive::u8>,
+						pub data_root: ::subxt::utils::H256,
 					}
 				}
 			}
@@ -29215,9 +29219,9 @@ pub mod api {
 		let runtime_metadata_hash = client.metadata().metadata_hash(&PALLETS);
 		if runtime_metadata_hash
 			!= [
-				161u8, 86u8, 162u8, 226u8, 133u8, 197u8, 208u8, 162u8, 66u8, 52u8, 140u8, 137u8,
-				203u8, 210u8, 17u8, 35u8, 47u8, 243u8, 136u8, 38u8, 241u8, 125u8, 101u8, 210u8,
-				245u8, 90u8, 121u8, 97u8, 201u8, 68u8, 187u8, 175u8,
+				203u8, 21u8, 152u8, 140u8, 238u8, 249u8, 239u8, 2u8, 19u8, 24u8, 45u8, 181u8,
+				178u8, 78u8, 37u8, 92u8, 227u8, 141u8, 219u8, 40u8, 57u8, 255u8, 95u8, 168u8,
+				211u8, 29u8, 27u8, 83u8, 113u8, 173u8, 49u8, 207u8,
 			] {
 			Err(::subxt::error::MetadataError::IncompatibleMetadata)
 		} else {
diff --git a/avail-subxt/src/primitives/header.rs b/avail-subxt/src/primitives/header.rs
index 963b2269..05a72a9a 100644
--- a/avail-subxt/src/primitives/header.rs
+++ b/avail-subxt/src/primitives/header.rs
@@ -32,7 +32,7 @@ impl Header {
 	pub fn data_root(&self) -> H256 {
 		match &self.extension {
 			HeaderExtension::V1(ext) => ext.commitment.data_root,
-			HeaderExtension::V2(ext) => ext.commitment.data_root.unwrap_or_default(),
+			HeaderExtension::V2(ext) => ext.commitment.data_root,
 		}
 	}
 }
